{"version":3,"sources":["background.jpg","Components/Header/Header.jsx","Components/AddForm/AddForm.jsx","Components/ListItem/ListItem.jsx","Components/ToDoList/ToDoList.jsx","Components/ToDo/ToDo.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","AddForm","addTaskHandler","useState","inputValue","setInputValue","onClick","type","placeholder","value","onChange","event","target","ListItem","task","deleteItemHendler","toggllTaskHandler","editItem","setEditItem","changeTaskTitleHandler","title","editInputValue","setEditInputValue","id","checked","done","ToDoList","tasks","map","key","ToDo","localTasks","JSON","parse","localStorage","getItem","setItem","stringify","setTasks","useEffect","newTask","Date","now","newTasks","push","filter","theIndex","findIndex","newTitle","App","style","backgroundImage","backImg","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.83567d2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.3b8334e4.jpg\";","import React from \"react\";\r\nimport \"./Header.scss\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"Header\">\r\n      <h1 className=\"Header__titile\">لیست فعالیت ها روزانه</h1>\r\n      <p className=\"Header__description\">(روزت رو مدیریت کن ;)</p>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport \"./AddForm.scss\";\r\n\r\nfunction AddForm({ addTaskHandler }) {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const inputChangeHndler = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddFrom\">\r\n      <button\r\n        className=\"AddForm__button\"\r\n        onClick={() => {\r\n          addTaskHandler(inputValue);\r\n          setInputValue(\"\");\r\n        }}\r\n      >\r\n        ایجاد\r\n      </button>\r\n      <input className=\"AddForm__input\" type=\"text\" placeholder=\"وظیفه جدید ایجاد کنید\" value={inputValue} onChange={inputChangeHndler} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./ListItem.scss\";\r\n\r\nfunction ListItem({ task, deleteItemHendler, toggllTaskHandler, editItem, setEditItem, changeTaskTitleHandler }) {\r\n  const [editInputValue, setEditInputValue] = useState(task.title);\r\n\r\n  const editInputHandler = (event) => {\r\n    setEditInputValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <li className=\"ListItem\">\r\n      <div>\r\n        <input className=\"ListItem__checkbox\" type=\"checkbox\" onChange={() => toggllTaskHandler(task.id)} checked={task.done} />\r\n        {task.id === editItem ? (\r\n          <input className=\"ListItem__input\" value={editInputValue} onChange={editInputHandler} />\r\n        ) : (\r\n          <span className={task.done ? \"ListItem__title done\" : \"ListItem__title\"}>{task.title}</span>\r\n        )}\r\n      </div>\r\n      {task.id === editItem ? (\r\n        <div>\r\n          <button\r\n            className=\"ListItem__save\"\r\n            onClick={() => {\r\n              changeTaskTitleHandler(task.id, editInputValue);\r\n              setEditItem(0);\r\n            }}\r\n          >\r\n            ذخیره\r\n          </button>\r\n          <button className=\"ListItem__cancell\" onClick={() => setEditItem(0)}>\r\n            انصراف\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <button className=\"ListItem__edit\" onClick={() => setEditItem(task.id)}>\r\n            ویرایش\r\n          </button>\r\n          <button className=\"ListItem__delete\" onClick={() => deleteItemHendler(task.id)}>\r\n            حذف\r\n          </button>\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { useState } from \"react\";\r\nimport ListItem from \"../ListItem/ListItem\";\r\nimport \"./ToDoList.scss\";\r\n\r\nfunction ToDoList({ tasks, deleteItemHendler, toggllTaskHandler, changeTaskTitleHandler }) {\r\n  const [editItem, setEditItem] = useState(0);\r\n\r\n  return (\r\n    <ul className=\"ToDoList\">\r\n      {tasks.map((task) => (\r\n        <ListItem\r\n          key={task.id}\r\n          task={task}\r\n          deleteItemHendler={deleteItemHendler}\r\n          toggllTaskHandler={toggllTaskHandler}\r\n          editItem={editItem}\r\n          setEditItem={setEditItem}\r\n          changeTaskTitleHandler={changeTaskTitleHandler}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AddForm from \"../AddForm/AddForm\";\r\nimport ToDoList from \"../ToDoList/ToDoList\";\r\nimport \"./ToDo.scss\";\r\n\r\nfunction ToDo() {\r\n  const localTasks = JSON.parse(localStorage.getItem(\"hyfjgnxcmvnbskdfjhgeor\"));\r\n  if (!localTasks) localStorage.setItem(\"hyfjgnxcmvnbskdfjhgeor\", JSON.stringify([]));\r\n\r\n  const [tasks, setTasks] = useState(localTasks);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"hyfjgnxcmvnbskdfjhgeor\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTaskHandler = (title) => {\r\n    if (title) {\r\n      const newTask = {\r\n        id: Date.now(),\r\n        title: title,\r\n        done: false,\r\n      };\r\n      const newTasks = [...tasks];\r\n      newTasks.push(newTask);\r\n      setTasks(newTasks);\r\n    }\r\n  };\r\n\r\n  const deleteItemHendler = (id) => {\r\n    const newTasks = tasks.filter((task) => task.id !== id);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const toggllTaskHandler = (id) => {\r\n    const newTasks = [...tasks];\r\n    const theIndex = newTasks.findIndex((task) => task.id === id);\r\n    newTasks[theIndex].done = !newTasks[theIndex].done;\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const changeTaskTitleHandler = (id, newTitle) => {\r\n    const newTasks = [...tasks];\r\n    const theIndex = newTasks.findIndex((task) => task.id === id);\r\n    newTasks[theIndex].title = newTitle;\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"ToDo\">\r\n      <AddForm addTaskHandler={addTaskHandler} />\r\n      <ToDoList\r\n        tasks={tasks}\r\n        deleteItemHendler={deleteItemHendler}\r\n        toggllTaskHandler={toggllTaskHandler}\r\n        changeTaskTitleHandler={changeTaskTitleHandler}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport Header from \"./Components/Header/Header\";\r\nimport ToDo from \"./Components/ToDo/ToDo\";\r\nimport backImg from \"./background.jpg\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div style={{ backgroundImage: `url(${backImg})` }} className=\"App\">\r\n      <Header />\r\n      <ToDo />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}